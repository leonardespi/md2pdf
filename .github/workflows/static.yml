name: Deploy md2pdf to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: github-pages
  cancel-in-progress: true

env:
  PUBLISH_DIR: build
  BASE_PATH: /md2pdf

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Discover app directory: prefer ./md2pdf if it exists; else repo root (.)
      - id: appdir
        name: Detect application directory
        run: |
          if [ -f "./md2pdf/package.json" ]; then
            echo "dir=./md2pdf" >> "$GITHUB_OUTPUT"
          else
            echo "dir=." >> "$GITHUB_OUTPUT"
          fi
          echo "Using app dir: $(cat $GITHUB_OUTPUT)"
      
      - name: Show directory for debugging
        run: |
          echo "App dir is: ${{ steps.appdir.outputs.dir }}"
          ls -la ${{ steps.appdir.outputs.dir }}
          if [ -f "${{ steps.appdir.outputs.dir }}/package.json" ]; then
            cat ${{ steps.appdir.outputs.dir }}/package.json | head -n 50
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
          cache-dependency-path: |
            ${{ steps.appdir.outputs.dir }}/yarn.lock
            ${{ steps.appdir.outputs.dir }}/package.json

      - name: Install dependencies
        working-directory: ${{ steps.appdir.outputs.dir }}
        run: yarn install --frozen-lockfile

      # Create React App build for sub-path (/md2pdf)
      - name: Build (CRA with sub-path)
        working-directory: ${{ steps.appdir.outputs.dir }}
        run: PUBLIC_URL=${{ env.BASE_PATH }} yarn build

      # SPA fallback to support deep links on Pages
      - name: Add 404.html (SPA fallback)
        run: |
          cp ${{ steps.appdir.outputs.dir }}/build/index.html \
             ${{ steps.appdir.outputs.dir }}/build/404.html

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.appdir.outputs.dir }}/${{ env.PUBLISH_DIR }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4

